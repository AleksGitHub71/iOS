import("Fastfile_parse_warnings_and_errors")

  # Custom Lane to parse the code coverage and post it in the MR as markdown.
  # Parameters:
  #   - mr: MR number that can be found in the url.
  #         Example: If the link for the MR is https://url/-/merge_requests/4447 - The MR number is 4447
  #   - token: Token required to post the message to the MR
  lane :parse_and_upload_code_coverage do | options |
    json_path = ENV["CODE_COVERAGE_JSON_PATH"]
    fastlane_relative_json_path = File.join(File.expand_path('..', Dir.pwd), json_path)
    markdown_path = ENV["CODE_COVERAGE_MARKDOWN_PATH"]
    fastlane_relative_markdown_path = File.join(File.expand_path('..', Dir.pwd), markdown_path)
    fastlane_relative_json_directory_path = File.dirname(fastlane_relative_json_path)
    fastlane_relative_mardown_directory_path = File.dirname(fastlane_relative_markdown_path)

    FileUtils.mkdir_p(fastlane_relative_json_directory_path) unless Dir.exist?(fastlane_relative_json_directory_path)
    FileUtils.mkdir_p(fastlane_relative_mardown_directory_path) unless Dir.exist?(fastlane_relative_mardown_directory_path)

    generate_json_for_code_coverage(file_path: fastlane_relative_json_path)
    code_coverage_markdown = generate_markdown_for_code_coverage(json_path: json_path)
    File.open(fastlane_relative_markdown_path, "w+") { |file| file.write(code_coverage_markdown) }
    post_code_coverage_markdown_to_mr(mr: options[:mr], token: options[:token], markdown_path: markdown_path)
  end

  private_lane :generate_json_for_code_coverage do|options|
    sh "xcrun xccov view --report #{get_latest_xcresult_file} --json > #{options[:file_path]}"
  end

  private_lane :generate_markdown_for_code_coverage do |options|
    code_coverage_json = read_json(json_path: options[:json_path])
    coverage_text = <<~TEXT
    ## Unit test coverage result
    Target | Percentage
    ---    | ---
    TEXT
    code_coverage_json[:targets].each do |target|
      coverage = target[:lineCoverage] * 100
      coverage_text << "#{target[:name]} | #{coverage.round(2)}%\n"
    end

    coverage_text
  end

  private_lane :post_code_coverage_markdown_to_mr do |options|
    mr_number = options[:mr]
    merge_request_url = ENV["PROJECT_URL"] + "/merge_requests/#{mr_number}/notes"
    post_markdown_to_mr(
      merge_request_url: merge_request_url,
      token: options[:token],
      markdown_path: options[:markdown_path]
    )
  end

